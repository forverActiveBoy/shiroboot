<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.alibaba.dao.AmdinRoleDao">
    <!-- AmdinRole的resultMap,column是给数据库列起的别名,它对应property类的属性-->
    <resultMap id="result_AmdinRole_Map" type="com.alibaba.entity.AmdinRole">
        <id column="id" property="id" />
        <result column="username" property="username" />
        <result column="roleid" property="roleid" />
    </resultMap>

    <!-- 数据库中表名为:shiro_amdin_role的列名,as前是数据库的列明,as后是列的别名用于映射成实体类中的属性,需要注意的是别名必须与resultMap中的column别名一致 -->
    <sql id="shiro_amdin_role_Column">
        shiro_amdin_role.id as id
        ,shiro_amdin_role.username as username
        ,shiro_amdin_role.roleid as roleid
    </sql>

    <!--获得类名为:AmdinRole对应的数据库表的数据总行数 -->
    <select id="getAmdinRoleRowCount" resultType="java.lang.Long">
        select count(id) from shiro_amdin_role
    </select>
    <!-- 获得类名为:AmdinRole对应数据库中表的数据集合 -->
    <select id="selectAmdinRole" resultMap="result_AmdinRole_Map">
        select 
        <include refid="shiro_amdin_role_Column" /> 
        from shiro_amdin_role
    </select> 

    <!-- 获得一个AmdinRole对象,以参数AmdinRole对象中不为空的属性作为条件进行查询-->
    <select id="selectAmdinRoleByObj" parameterType="com.alibaba.entity.AmdinRole" resultMap="result_AmdinRole_Map">
        select 
            <include refid="shiro_amdin_role_Column" /> 
        from shiro_amdin_role
        <where>
            <if test="roleid != null "> and shiro_amdin_role.roleid = #{roleid}</if>
            <if test="username != null "> and shiro_amdin_role.username = #{username}</if>
            <if test="id != null "> and shiro_amdin_role.id = #{id}</if>
        </where>
    </select> 

    <!-- 通过AmdinRole的id获得对应数据库中表的数据对象-->
    <select id="selectAmdinRoleById" parameterType="java.lang.Integer" resultMap="result_AmdinRole_Map">
        select 
            <include refid="shiro_amdin_role_Column" /> 
        from shiro_amdin_role
        where shiro_amdin_role.id = #{id}
    </select> 

    <!-- 将AmdinRole插入到对应数据库的表中,包括属性值为null的数据-->

    <insert id="insertAmdinRole" parameterType="com.alibaba.entity.AmdinRole">
        insert into shiro_amdin_role(id,username,roleid) 
        values(#{id},#{username},#{roleid})
    </insert>

    <!-- 将AmdinRole中属性值不为null的数据,插入到对应数据库的表中-->
    <insert id="insertNonEmptyAmdinRole" parameterType="com.alibaba.entity.AmdinRole">
        insert into shiro_amdin_role
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">id,</if>
            <if test="username != null">username,</if>
            <if test="roleid != null">roleid,</if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null"> #{id},</if>
            <if test="username != null"> #{username},</if>
            <if test="roleid != null"> #{roleid},</if>
        </trim>
    </insert>

    <!-- 通过AmdinRole的id将数据库表中对应的数据删除-->
    <delete id="deleteAmdinRoleById" parameterType="java.lang.Integer">
        delete from shiro_amdin_role
        where id = #{id}
    </delete>

    <!-- 通过AmdinRole的id将AmdinRole的数据更新到数据库中对应的表,包括值null的数据-->
    <update id="updateAmdinRoleById" parameterType="com.alibaba.entity.AmdinRole">
        update shiro_amdin_role set
            username=#{username}
            ,roleid=#{roleid}
        where id=#{id}
    </update>

    <!-- 通过AmdinRole的id将AmdinRole中属性值不为null的数据更新到数据库对应的表中-->
    <update id="updateNonEmptyAmdinRoleById" parameterType="com.alibaba.entity.AmdinRole">
        update shiro_amdin_role
        <set>
            <if test="username != null">
                username=#{username},
            </if>
            <if test="roleid != null">
                roleid=#{roleid},
            </if>
        </set>
        where id=#{id}
    </update>

</mapper>